variables:
  variables:
    EMAIL_HOST: $EMAIL_HOST
    EMAIL_PORT: $EMAIL_PORT
    EMAIL_USERNAME: $EMAIL_USERNAME
    EMAIL_PASSWORD: $EMAIL_PASSWORD
    DB_URL: $DB_URL
    DB_USER: $DB_USER
    DB_PASSWORD: $DB_PASSWORD


# List of stages for jobs, and their order of execution
stages:
  - build
  - test
  # - quality
#  - publish
#  - deploy

build:
  stage: build
  image: maven:latest
  script:
    - cd backend/Furrever_Home
    - mvn clean package

test:
  stage: test
  image: maven:latest
  script:
    - cd backend/Furrever_Home
    - mvn test

# quality:
#   stage: quality
#   image: openjdk:11
#   script:
#     - echo "Compiling the project"
#     - mkdir smells/
#     - java -jar $CI_PROJECT_DIR/.gitlab/DesigniteJava.jar -i $CI_PROJECT_DIR -o $CI_PROJECT_DIR/smells/ -d
#   artifacts:
#     paths:
#       - smells/
#       - $CI_PROJECT_DIR

#publish:
#  image: docker:latest
#  stage: publish
#  tags:
#    - furrever-gl-runner
#  variables:
#    # these values may need to be different if using TLS, k8s, etc.
#    # You can alternatively set defaults in your runner config
#    DOCKER_TLS_CERTDIR: ""
#    DOCKER_HOST: "tcp://docker:2375"
#  services:
#    - docker:dind
#
#  script:
#    - pwd
#    - echo $SERVER_IP
#    - docker --version
#    - docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io
#    - docker build -t docker.io/shahmehil/test:$CI_COMMIT_SHORT_SHA .
#    - docker push docker.io/shahmehil/test:$CI_COMMIT_SHORT_SHA
#  only:
#    - main
#
#
#deploy:
#  image: alpine:latest
#  stage: deploy
#  tags:
#    - furrever-gl-runner
#  script:
#    - chmod og= $ID_RSA
#    - apk update && apk add openssh-client
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PWD docker.io"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull docker.io/shahmehil/test:$CI_COMMIT_SHORT_SHA"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f my-app || true"
#    - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 8073:8073 --name my-app docker.io/shahmehil/test:$CI_COMMIT_SHORT_SHA"
#  environment:
#    name: production
#    url: http://172.17.1.211:8073
#  only:
#    - main
